version: '3'
services:
  postgres:
    container_name: postgres
    image: postgres:12.3
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ucord_db
    networks:
      - ucord-service-net

  redis:
    image: redis:7.0.12
    ports:
      - "5444:6379"
    networks:
      - ucord-service-net

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "6666:2181"
    networks:
      - ucord-service-net

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - ucord-service-net


    #Если во фронте - закоментить build: и поднастройки, разкоментить image:
    #Сбилдить образ: docker build -t shykamuy/ucord_auth_service .
    #Пушнуть: docker push shykamuy/ucord_auth_service

  ucord-auth-service:
#    build:
#      context: ..\ucord_auth_service
#      dockerfile: ..\ucord_auth_service\Dockerfile
    image: shykamuy/ucord-auth-service:latest
    container_name: auth-service
    depends_on:
      - redis
      - postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ucord_db
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - APP_JWT_SECRET=someSecretKey
      - APP_JWT_TOKEN_EXPIRATION=1d
      - APP_JWT_REFRESH_TOKEN_EXPIRATION=1d
    ports:
      - "8089:8089"
    networks:
      - ucord-service-net
    restart: on-failure

  ucord-personal-account-service:
#    build:
#      context: ..\ucord_personal_account_service
#      dockerfile: ..\ucord_personal_account_service\Dockerfile
    image: shykamuy/ucord-personal-account-service:latest
    container_name: account-service
    depends_on:
      - redis
      - postgres
      - ucord-auth-service
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ucord_db
    ports:
      - "8088:8088"
    networks:
      - ucord-service-net
    restart: on-failure

  discovery:
#    build:
#      context: ../ucord-discovery-service
#      dockerfile: ../ucord_auth_service/Dockerfile
    image: shykamuy/ucord-discovery:latest
    container_name: discovery
    ports:
      - "8761:8761"
    networks:
      - ucord-service-net
    environment:
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - EUREKA_SERVER_ENABLE_SELF_PRESERVATION=false
    restart: always

  gateway:
#    build:
#      context: ../ucord-gateway-service
#      dockerfile: ../ucord-gateway-service/Dockerfile
    image: shykamuy/ucord-gateway:latest
    container_name: gateway
    depends_on:
      - discovery
    ports:
      - "8080:8080"
    networks:
      - ucord-service-net
    restart: always





networks:
  ucord-service-net: